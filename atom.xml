<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[M.C. Pantz]]></title>
  <link href="http://www.mcpantz.org/atom.xml" rel="self"/>
  <link href="http://www.mcpantz.org/"/>
  <updated>2014-11-18T15:22:22-06:00</updated>
  <id>http://www.mcpantz.org/</id>
  <author>
    <name><![CDATA[Paul C. Mantz]]></name>
    <email><![CDATA[pcmantz@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Moving From Escreen to Workgroups]]></title>
    <link href="http://www.mcpantz.org/blog/2012/10/21/moving-from-escreen-to-workgroups/"/>
    <updated>2012-10-21T14:05:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2012/10/21/moving-from-escreen-to-workgroups</id>
    <content type="html"><![CDATA[<p>I use Emacs to manage multiple different projects simultaneously. Every
professional engagement I&rsquo;ve had so far has had me working on multiple
codebases at once. Add these to this my elisp and Org Mode files, and that&rsquo;s a
lot of frames to have open!</p>

<p>My first attempt at managing multiple projects had the unintended consequence
of holding me back from fully realizing the full potential of Emacs. I ran
<code>emacsclient</code> sessions in GNU Screen for each project I worked on. I could
flip between different frame configurations, each one set up for an individual
project.  This worked well enough that it kept me from running Emacs as a
graphical interface.</p>

<p>Eventually, <a href="http://jrock.us/">Jon Rockway</a> convinced me that I should abandon
command-line emacs and use Emacs as it was intended; as a graphical
application. However, I had developed a dependence on multiplexing in my
workflow that was hard to break. I first tried
<a href="http://www.emacswiki.org/emacs/EmacsLispScreen">Elscreen</a>, which allowed me
to try multiplexing my projects natively in Emacs. However, the default
configuration took up screen real estate and I didn&rsquo;t have the patience to try
and remove it; so I quickly started to look for alternatives.</p>

<h2>Escreen</h2>

<p>The next option I came across was
<a href="http://www.emacswiki.org/emacs/EmacsScreen">escreen</a>. This was better suited
to my workflow, and it used existing resources to manage workspace
switching. Specifically, it embedded the window configurations into the buffer
used to store frame configuration information, which I thought was
ingenious. I was able to configure it so that my transitions between my
constantly open GNU Screen terminal and Emacs was seamless. I would combine
this with matching up the screen numbers per project, which allowed me to
navigate my project transitions with very little mnemonic overhead.</p>

<p>Escreen is an excellent package, but still left a few features wanting.
Specifically, I wanted:</p>

<ul>
<li>Named Workgroups - While matching up terminal numbers goes a long way, it
would be much better if I could give my window configurations meaningful
names.</li>
<li>Persistence - I set my windows up in the same configuration and order, and
reconfiguring emacs takes a while.  The more I can automate that process,
the better.</li>
<li>Active Development - <code>escreen</code> hasn&rsquo;t seen any development in a few years,
and I do not have the time and/or experience to round off the sharp edges.</li>
</ul>


<h2>Workgroups</h2>

<p>A bit of research led me to check out
<a href="http://www.emacswiki.org/emacs/WorkgroupsForWindows">workgroups</a>. Puns aside,
this is an excellent piece of software for managing window configurations. I
was able to install the package from MELPA and configure it close enough to my
<code>escreen</code> configuration so that I haven&rsquo;t been able to functionally notice the
difference. Here is what I have so far:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="c1">;; workgroups</span>
</span><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;workgroups</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">wg-prefix-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-z&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nv">wg-no-confirm</span> <span class="no">t</span>
</span><span class='line'>      <span class="nv">wg-file</span> <span class="p">(</span><span class="nv">concat</span> <span class="nv">elisp-dir</span> <span class="s">&quot;/workgroups&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nv">wg-use-faces</span> <span class="no">nil</span>
</span><span class='line'>      <span class="nv">wg-switch-on-load</span> <span class="no">nil</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">wg-load-default</span> <span class="p">()</span>
</span><span class='line'>  <span class="s">&quot;Run `wg-load&#39; on `wg-file&#39;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">wg-load</span> <span class="nv">wg-file</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">wg-save-default</span> <span class="p">()</span>
</span><span class='line'>  <span class="s">&quot;Run `wg-save&#39; on `wg-file&#39;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">when</span> <span class="nv">wg-list</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">with-temp-message</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>      <span class="p">(</span><span class="nv">wg-save</span> <span class="nv">wg-file</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">wg-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;g&quot;</span><span class="p">)</span> <span class="ss">&#39;wg-switch-to-workgroup</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">wg-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-l&quot;</span><span class="p">)</span> <span class="ss">&#39;wg-load-default</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">wg-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;C-s&quot;</span><span class="p">)</span> <span class="ss">&#39;wg-save-default</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">define-key</span> <span class="nv">wg-map</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&quot;&lt;backspace&gt;&quot;</span><span class="p">)</span> <span class="ss">&#39;wg-switch-left</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">workgroups-mode</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;auto-save-hook</span> <span class="ss">&#39;wg-save-default</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;kill-emacs-hook</span> <span class="ss">&#39;wg-save-default</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Most of the code here was provided by this Stack Overflow
<a href="http://stackoverflow.com/questions/11263960/what-is-the-best-emacs-workspaces-plugin">post</a>.</p>

<p>So what do I have now?</p>

<ul>
<li><p>I can now switch to workgroups by name! This makes it much easier for me to
name projects and completely forget about matching up numbers. I can still
match up numbers if I want, but why bother?</p></li>
<li><p>I can restore my workgroup list after a restart. This makes it much easier
to reboot and get back to where I left off.</p></li>
<li><p>Re-ordering workgroups is easy and awesome.  Using my configuration, <code>C-z
C-,</code> and <code>C-z C-.</code> will move a workgroup left and right, respectively. This
makes it much easier to arrange things in case something gets out of whack.</p></li>
<li><p>All my key bindings are still the same. I don&rsquo;t have to worry about altering
any of my muscle memory to accommodate for a new workflow; it is just the
same plus more features.</p></li>
</ul>


<h2>The Ugly Remains</h2>

<p><code>workgroups</code> is definitely a much more mature and polished product. Despite
this, <code>escreen</code> was able to dodge a lot of rough edges and rely on Emacs&rsquo;s own
built in abstractions by using the frame buffer to host workgroups that I am
missing with <code>workgroups</code> so far:</p>

<ul>
<li>Per-workgroup switch-buffer lists - With <code>escreen</code>, each workgroup had its
own list of visited buffers.  This meant that my buffer visiting activities
bled into each other less frequently.  It appears that with <code>workgroup</code> that
the visited buffer list is not localized to the workgroup, which is
frustrating.</li>
</ul>


<h2>Final Steps</h2>

<p>Despite the progress, There are a few things left on my to-do list for <code>workgroups</code>.</p>

<ul>
<li><p>Persistent buffers - I haven&rsquo;t yet managed this. The only thing that gets
saved and restored right now are my buffer names.</p></li>
<li><p>Default new workgroups - I would like to have some default behavior when
creating new windows. I name my windows after my projects; if I open a
workgroup <code>foo</code> and there exists a directory <code>$HOME/git/foo</code>, I would like
for the window to have a magit buffer there open to the project, waiting for
me.  If I could get this to work in conjunction with
<a href="https://github.com/jrockway/eproject">eproject</a> or
<a href="https://github.com/bbatsov/projectile">projectile</a>, that would be icing on
the cake.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shell Paths on Mountain Lion Are a Confusing Mess]]></title>
    <link href="http://www.mcpantz.org/blog/2012/08/01/shell-paths-on-mountain-lion-are-a-confusing-mess/"/>
    <updated>2012-08-01T00:41:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2012/08/01/shell-paths-on-mountain-lion-are-a-confusing-mess</id>
    <content type="html"><![CDATA[<p>I am setting up an OS X 10.8 (Mountain Lion) machine as a development
machine. For my own personal use I prefer using a Linux box, but between my
own nostalgia for <a href="http://www.gentoo.org/">Gentoo</a> and the peculiar yet
undeniable strength of <a href="http://mxcl.github.com/homebrew/">homebrew</a>, I am
perfectly happy to use it as a day-to-day development machine.</p>

<p>In order to use homebrew to its fullest, I edited the
<a href="https://developer.apple.com/library/mac/#documentation/Darwin/Reference/Manpages/man8/path_helper.8.html">/etc/paths</a>
file to make things right:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/local/sbin
</span><span class='line'>/usr/local/bin
</span><span class='line'>/usr/sbin
</span><span class='line'>/usr/bin
</span><span class='line'>/sbin
</span><span class='line'>/bin
</span></code></pre></td></tr></table></div></figure>


<p>So far, no problems.  Will report back later.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Iterators Make You Lazy]]></title>
    <link href="http://www.mcpantz.org/blog/2012/06/24/iterators-make-you-lazy/"/>
    <updated>2012-06-24T15:25:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2012/06/24/iterators-make-you-lazy</id>
    <content type="html"><![CDATA[<p>One of the most productive &ldquo;A-Ha!&rdquo; moments I&rsquo;ve had as a developer came when I
learned how to use iterators, and the dramatic effect that it has on my coding
style. When we introduced the concept to one layer of code to handle a
specific problem, the pattern of development proved infectious for dealing
with similar workflows and managed to make our code much more succinct and
understandable to newcomers.</p>

<p>At a past place of $WORK, I worked on a project where we wanted to add a
REST-ful API to our data, but we had to deal with blocking SQL queries whose
completion took longer than any sane HTTP timeout should be. The result was
that we needed to stream the formatted output of the query.</p>

<p>It turns out that most REST-type plugins for Catalyst don&rsquo;t handle streaming
output, so we couldn&rsquo;t use something off the shelf.  However, we did discover
a module called
<a href="https://metacpan.org/module/Iterator::Simple">Iterator::Simple</a>.  This
allowed us to construct on-the-fly formatters that we could then stream to the
users. Now all of our code stopped looking like ugly while loops and temporary
variables, and turned into this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="nn">Iterator::</span><span class="n">Simple</span> <span class="sx">qw(iflatten imap)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">format_nodes</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$nodes_rs</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">iflatten</span> <span class="p">[</span>
</span><span class='line'>       <span class="s">&#39;&lt;nodes&gt;&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">imap</span> <span class="p">{</span> <span class="n">format_node</span><span class="p">(</span><span class="nv">$_</span><span class="p">)</span> <span class="p">}</span> <span class="nv">$nodes_rs</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;&lt;/nodes&gt;&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The fun didn&rsquo;t stop there.  It started becoming clear that chaining and
passing around iterators was a great way to quickly set up the construction of
data sets, then pass those constructions along to consumers. A small library
of macros had managed to invade our code and make it very, very lazy.</p>

<p>It turned out that many of our data preparation routines were expressible as
computations that didn&rsquo;t need to live in memory. Anywhere we were running a
loop and processing data, we could refactor that region with <code>imap</code> and a code
block, and have the code execute on a per-needed basis.</p>

<p>The only one gripe that I have with this module is that its file handle
emulation is incomplete.  The module emulates the <code>getline</code> syntax; e.g.; the
<code>&amp;&lt;&gt;</code> operator, but not the method. Right now,
<a href="https://metacpan.org/source/MIYAGAWA/Catalyst-Engine-PSGI-0.13/lib/Catalyst/Engine/PSGI.pm">Catalyst::Engine::PSGI</a>
assumes that the <code>getline</code> method is implemented on the resource to be
streamed.  This is true of file handles, but not of
<code>Iterator::Simple::Iterator</code> objects. If the latter provided that interface,
then this module would increase dramatically in utility. I have filed
<a href="https://rt.cpan.org/Public/Bug/Display.html?id=72629">a bug</a> and submitted a
patch, so we&rsquo;ll see how it plays out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Old Domain, New Blog Taste!]]></title>
    <link href="http://www.mcpantz.org/blog/2012/06/24/old-domain-new-blog-taste/"/>
    <updated>2012-06-24T00:33:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2012/06/24/old-domain-new-blog-taste</id>
    <content type="html"><![CDATA[<p>Within the next 24 hours, my <a href="http://pcmantz.github.com">GitHub Page</a> should
be accessible any- and everywhere from my preferred vanity domain,
<a href="http://mcpantz.org">mcpantz.org</a>. Right now I am having it redirect as a
top-level domain, mostly for shortened URL length.  I would love to hear of
any downsides, other than some sort of fragility in long-term resource names.</p>

<p>Also, I need to find a decent image post, as numerous of my WordPress-era
posts had embedded URLs to images that are now broken.  I&rsquo;m not too keen on
<a href="http://imgur.com/">imgur.com</a>, and the last time I used
<a href="http://imageshack.us/">ImageShack</a> was the early 00&rsquo;s.  Does anyone have some
good, modern suggestion for long-term image hosting, particularly for
hot-linking into websites?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YAPC::NA Post-Mortem]]></title>
    <link href="http://www.mcpantz.org/blog/2012/06/17/yapc-na-post-mortem/"/>
    <updated>2012-06-17T23:37:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2012/06/17/yapc-na-post-mortem</id>
    <content type="html"><![CDATA[<p>I attended my Fourth <a href="http://yapcna.org/">YAPC::NA</a> this past week, and just
as usual, I had a blast. Conferences are valuable experiences that allow one
to step back and re-evaluate one&rsquo;s work compared to the Zeitgeist of the
community.</p>

<p>There were a lot of excellent talks this year, and even more that I didn&rsquo;t
see.  The one that left everyone&rsquo;s jaw on the floor was
<a href="twitter.com/mcholste">Martin Holste</a>&rsquo;s
<a href="http://blog.yapcna.org/post/23780340461/perl-for-big-data">Perl For Big Data</a>. There
were a lot of talks on &ldquo;big data&rdquo; but The sheer <em>audacity</em> that this project
displayed was impressive.  Holste demonstrated lightning fast search,
management-pleasing data analysis, and massive distributed throughput on some
absurd amount of real-time data. The amazing part of it all was that his team
accomplished this not by scaling up their hardware, but by using standard open
source software to its limits.</p>

<p>Another general trend that I&rsquo;m quite happy to see is that Perl hackers are
thieving magpies. Stevan Little of <a href="http://moose.perl.org/">Moose</a> fame
demonstrated <a href="https://metacpan.org/module/Web::Machine">Web::Machine</a> as a
clone of Basho&rsquo;s <a href="http://wiki.basho.com/Webmachine.html">Webmachine</a>. I am
merely looking for an excuse to use it
now. <a href="http://www.genehack.org/">Genehack</a> also unveiled
<a href="https://github.com/genehack/HiD">HiD</a>, a Jekyll clone. I was surprised that
Miyagawa, one of the first Perl hackers to be notorious for rifling the pocket
change of other language&rsquo;s libraries, did not show off any new libraries, but
did a great talk on comparing his experiences with the Python and Ruby
ecosystems he has plumbed in the past, and how to bring the good parts back to
Perl.</p>

<p>Beyond the technical, it was fun to connect and reconnect with a lot of people
I&rsquo;ve interacted with on IRC, twitter, and in past lives at past jobs. I am
definitely looking forward to going back again in the future, and I hope to
entice more folk to YAPC, both those new to Perl and those who toil in the
shadows (you know who you are!)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Old Blog Content Converted]]></title>
    <link href="http://www.mcpantz.org/blog/2012/05/25/old-blog-content-converted/"/>
    <updated>2012-05-25T13:14:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2012/05/25/old-blog-content-converted</id>
    <content type="html"><![CDATA[<p>I converted all my old published content from <a href="http://www.mcpantz.org">mcpantz.org</a> to this new GitHub page.  Once I confirm that everything else is in place I am going to cancel the other page, and save a few bucks on hosting. In the meantime, enjoy any content that you may not have seen before.</p>

<p>If you are redirected to this page after the domain name switch; apologies for the broken link.  Please use a newer, more stable permalink that my site now provides.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building DBD::Pg for Perlbrew on Ubuntu]]></title>
    <link href="http://www.mcpantz.org/blog/2012/05/23/building-dbd-pg-for-perlbrew-on-ubuntu/"/>
    <updated>2012-05-23T12:57:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2012/05/23/building-dbd-pg-for-perlbrew-on-ubuntu</id>
    <content type="html"><![CDATA[<p>I get a lot of benefit from managing my own Perl via perlbrew, but I&rsquo;m fine
using Ubuntu&rsquo;s packaged Postgres sever. However, Ubuntu strips down a lot of
its applications into components, and you have to install development versions
and header files separately if you want to compile everything. I&rsquo;m putting
this here for anyone who might be trying to install DBD::Pg on top of
perlbrew.  I&rsquo;m not going to claim this will work in all circumstances, and it
assumes you have already installed Postgres, but it definitely worked for me.</p>

<pre><code>sudo apt-get install libpq5 postgresql-server-dev-9.1
POSTGRES_HOME='/usr/lib/postgresql/9.1' POSTGRES_INCLUDE='/usr/include/postgresql' cpanm Bundle::DBD::Pg
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl Jails and You: Local::lib, Perlbrew, and Friends]]></title>
    <link href="http://www.mcpantz.org/blog/2012/02/08/perl-jails-and-you-local-lib/"/>
    <updated>2012-02-08T23:39:00-06:00</updated>
    <id>http://www.mcpantz.org/blog/2012/02/08/perl-jails-and-you-local-lib</id>
    <content type="html"><![CDATA[<p>In the ruby world, many people are aware of the
<a href="http://beginrescueend.com/">ruby rvm</a> tool for ruby version management. Perl
is not generally thought of as a virtual machine with an isolable environment,
because of its frequent deep intertwining with the host operating system.
However, there are tools that make this possible.</p>

<p>The problem with using Perl in this fashion is not that the solution does not
occur to people, but that the solution occurs to <em>many</em> people simultaneously.
Most of the hacker luminaries in the Perl world have invented a respective
solution. <a href="http://search.cpan.org/~bdfoy/">brian d foy</a> has written of his own
<a href="http://stackoverflow.com/questions/398221/how-do-you-manage-perl-modules-when-using-a-package-manager/398397#398397">solution</a>,
there is a <a href="https://metacpan.org/module/perlrocks">rubygems</a> implementation in
the wild, and the packaging problem has had multiple attempts made on it.
Today, I&rsquo;d like to review the best-in-class applications, and how to use them.</p>

<h2>local::lib</h2>

<p><a href="https://metacpan.org/module/local::lib">local::lib</a> creates the the
configuration configuration information for a perl package directory without
affecting the system perl&rsquo;s library paths. Before worrying about your base
perl installation, you should know <code>local::lib</code>.  If you have a trustworthy
sysadmin or are a junior dev on a team, this is most likely your situation.</p>

<p><code>local::lib</code> lets you try install modules locally before installing them in a
shared environment to experiment with new features, or install bleeding-edge
versions of Perl-based command line apps like
<a href="https://metacpan.org/module/App::GitGot">App::GitGot</a>,
<a href="https://metacpan.org/module/App::Ack">App::Ack</a> for personal use.</p>

<h2>perlbrew</h2>

<p>Are you developing in an environment where you have to test against multipleo
perl binaries? Then you should probably give <a href="http://perlbrew.pl/">perlbrew</a> a
try.</p>

<p>This application in a fully-featured suite for bootstrapping a perl
environment. The perlbrew script allows you to install multiple versions of
Perl and maintain library directories much more conveniently. In this regards,
it is much more like rvm.</p>

<p>Another similar feature that perlbrew shares with rvm is its management of
library assets. The perlbrew binary includes a command to install cpanminus,
which hopefully you are using now already (If you are not, I will have to
write another blog post!) This copy coordinates with the built-in lib
functionality to install libaries to the current chosen perl, minimizing the
fuss and clash and conflict.</p>

<h2>Combinations Thereof</h2>

<p>If you are a solo developer who does not need to coordinate the usage of your
development machine with other users, than <em>use perlbrew</em>. It provides the
solutions of all the applications directly in a reproducible, scriptable
manner.</p>

<p>If you are in a situation where setting up your own perl is a troublesome
wreck, use <code>local::lib</code>. You will have a clean library path to experiment
with, and you can feel no guild whatsoever when you muck up a dependency and
need to blow it away.</p>

<p>Regardless of anything, use the right tool for the right job, and make sure
you know that you are getting what you need. If you aren&rsquo;t, complain on
<a href="http://www.irc.perl.org/">IRC</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Large Files in Emacs]]></title>
    <link href="http://www.mcpantz.org/blog/2012/02/05/large-files-in-emacs/"/>
    <updated>2012-02-05T15:43:00-06:00</updated>
    <id>http://www.mcpantz.org/blog/2012/02/05/large-files-in-emacs</id>
    <content type="html"><![CDATA[<p>I have started work on a new project where a lot of the source files are huge;
files are commonly over 1,000 lines in length.  While this is a massive
<a href="http://www.codinghorror.com/blog/2006/05/code-smells.html">code smell</a> that
needs to be dealt with, it doesn&rsquo;t preclude the necessity of working with the
file in the first place.</p>

<p>It appears that emacs has no problem navigating the files, but editing large
files is a royal pain in the rear end.  It appears that the only reasonable
solution to shut off <code>'font-lock-mode</code>.</p>

<p>In addition, I have been using
<a href="http://www.emacswiki.org/emacs/CPerlModeOutlineMode">outline-minor-mode</a> to
narrow the focus of my attention.  Having a top-down view of the file which I
am working with really helps.</p>

<p>I wonder how much hacking would be involved to make comments associated with
their own header; or in the case of indented comments, with the level above
them; as sort of a &ldquo;floating&rdquo; header level rather than a specific one.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up Rxvt-unicode on Ubuntu 11.10]]></title>
    <link href="http://www.mcpantz.org/blog/2012/01/29/setting-up-rxvt-unicode-on-ubuntu-11-dot-10/"/>
    <updated>2012-01-29T21:54:00-06:00</updated>
    <id>http://www.mcpantz.org/blog/2012/01/29/setting-up-rxvt-unicode-on-ubuntu-11-dot-10</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been an Ubuntu &amp; Mint user for the past few years.  I am not particularly
focused on usability or community, but it is nice using an operating system
where most of the kinks have been ironed out for me by the efforts of others.</p>

<p>Lately, I decided to abandon
<a href="http://www.tenshu.net/p/terminator.html">Terminator</a> in favor of
<a href="http://software.schmorp.de/pkg/rxvt-unicode.html">rxvt-unicode</a>,
a.k.a. <code>urxvt</code>.  Already I&rsquo;ve found it to be a lot snappier, but installation
was not simple.  There are a few hoops to jump through yet.</p>

<h2>Install ncurses-term</h2>

<p>Apparently the ubuntu packagers haven&rsquo;t gotten around to bundling the
<a href="http://en.wikipedia.org/wiki/Terminfo">terminfo</a> entry for rxvt-unicode into
the package itself, as they probably don&rsquo;t think you need programs like
<code>screen</code> or <code>tmux</code>.  Rather, Ubuntu wants to to install yet another package,
which has no related dependencies. be sure to install the ncurses-term
package, which seems like a good idea anyways.  And if you&rsquo;d like to tell the
Ubuntu packagers that they should fix this, you can go check out this
<a href="https://bugs.launchpad.net/ubuntu/+source/rxvt-unicode/+bug/772924">bug report</a>.</p>

<h2>Installing rxvt-unicode</h2>

<p>This part is relatively easy, just install the <code>rxvt-unicode</code> package and its
dependencies.</p>

<h2>Setting up the environment</h2>

<p>Configuring <code>rxvt-unicode</code> is done through the <code>~/.Xdefaults</code> configuration
file, which is the historic location of all X11 application data. Since it is
a grab-bag of a file, it is a little harder to find examples.  However, I have
munged through a few and posted my end product in
<a href="https://gist.github.com/1721879">this gist</a>.</p>

<p>If you take nothing else from this configuration, <em>please</em> change the default
colors.  Your eyes will thank me for it, since the blue will be legible.</p>

<h2>Where From Here</h2>

<p>By no means is this journey over.  It turns out that my console is only
supporting 88 colors, and that there are
<a href="http://blog.oldworld.fr/index.php?post/2010/03/21/256-colors-terminal-with-tmux-and-urxvt">others</a>
who have had the same problem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyland]]></title>
    <link href="http://www.mcpantz.org/blog/2012/01/14/rubyland/"/>
    <updated>2012-01-14T18:47:00-06:00</updated>
    <id>http://www.mcpantz.org/blog/2012/01/14/rubyland</id>
    <content type="html"><![CDATA[<p>Today, I gave ruby&rsquo;s ecosystem of web tools a try.  Wordpress isn&rsquo;t a good
blogging solution for me, but i would like to have a public-facing,
non-site-specific blog to pass about.  I am giving
<a href="http://octopress.org/">Octopress</a> a try for managing my my non-machine
readable output.</p>

<p>I am enjoying the prospect of using a completely flatfile blog; as that means
I have one less moving part to worry about.</p>

<p>Hopefully I will have the motivation to post about some useful information
here.  It turns out that the things that infuriate me tend to be very helpful
to others, so keep your eyes peeled.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CPAN Shenanigans]]></title>
    <link href="http://www.mcpantz.org/blog/2009/05/20/cpan-shenanigans/"/>
    <updated>2009-05-20T17:15:00-05:00</updated>
    <id>http://www.mcpantz.org/blog/2009/05/20/cpan-shenanigans</id>
    <content type="html"><![CDATA[<p>I just requested a CPAN account last night.  Hopefully I&rsquo;ll have the gumption to throw up all those that I feel are missing that I&rsquo;ve been missing that I would be very happy to add.  one of them is glob-match support in perl that&rsquo;s file-system agnostic.</p>

<p>Of course, My first module&rsquo;s going to be a result of some <a href="http://scavhunt.uchicago.edu/" title="The University of Chicago Scavenger Hunt">Scav Hunt</a> tomfoolery, which I&rsquo;ll be sure to post about later, once it&rsquo;s up.  Let&rsquo;s just say that Jewish numerology will get a lot easier now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pumping Station: One Progress]]></title>
    <link href="http://www.mcpantz.org/blog/2009/05/05/pumping-station-one-progress/"/>
    <updated>2009-05-05T18:07:37-05:00</updated>
    <id>http://www.mcpantz.org/blog/2009/05/05/pumping-station-one-progress</id>
    <content type="html"><![CDATA[<p>What did i do this weekend?  I helped <a href="http://pumpingstationone.org/blog/2009/05/buildout-weekend---part-2-the-loft.html" title="Buildout Weekend - Part 2: The Loft">build a loft</a>, that&rsquo;s what.  And it was awesome.</p>

<p>Next up on the agenda: I feel sometimes that I&rsquo;m the leader of the software interests at PS:1 somewhat, so I&rsquo;m going to make an executive decision on this.  I have many, many different projects going on aside from hacking, so I can&rsquo;t show up at the space every day like some of the more dedicated members have been doing.  Instead, I&rsquo;m just going to be regular about this.</p>

<p>I&rsquo;m going to try and make it to the space Wednesday night and Sunday afternoon.  Anyone interested in programming languages, esoteric languages, functional programming, and software engineering should show up and talk/yell at me.  If enough people show up, we&rsquo;ll call it a meetup group.  If they don&rsquo;t, I&rsquo;ll read &amp; study by myself, and get anti-social and even more stabbity.  Your call.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Back to Your Normal Scheduled Program]]></title>
    <link href="http://www.mcpantz.org/blog/2009/02/22/back-to-your-normal-scheduled-program/"/>
    <updated>2009-02-22T22:59:40-06:00</updated>
    <id>http://www.mcpantz.org/blog/2009/02/22/back-to-your-normal-scheduled-program</id>
    <content type="html"><![CDATA[<p>After a bit of database corruption sweeped under the rug, I&rsquo;m back and as ornery as ever.  However, this has brought me to an empasse, as I didn&rsquo;t know what to do with Wordpress in the event of a disaster.  However, I could manage to hack Movable Type pretty well, as it&rsquo;s written in a language that doesn&rsquo;t make me want to choke up bile, and I&rsquo;d feel more like contributing to that project than anything.</p>

<p>So there&rsquo;s a minute possiblity that this blog might make some changes in the future&ndash;stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changes in Routine]]></title>
    <link href="http://www.mcpantz.org/blog/2009/01/22/changes-in-routine/"/>
    <updated>2009-01-22T01:39:48-06:00</updated>
    <id>http://www.mcpantz.org/blog/2009/01/22/changes-in-routine</id>
    <content type="html"><![CDATA[<p>If you&rsquo;ve known me for any length of time, you&rsquo;d know I hate mornings.  We&rsquo;re not talking cutesy Garfield grumpiness, we&rsquo;re talking it&rsquo;s-sharp-objects-time distaste for life.  College let me cement a lax schedule in my life, and working from home lets it continue.</p>

<p>Over Christmas break, my sleeping schedule got completely discombobulated, since I had about eleven consecutive days.  For the next week, it was difficult for me to get up before noon, and was getting worse.  Finally a couple weeks ago, a couple naps aligned my sleep schedule in such a way that I was getting up between 5 and 7 am; something I haven&rsquo;t done since my high school days.</p>

<p>So far, the major difference is how I use my time.  I usually spend the hours between midnight and 4am doing a lot of nothing.  It&rsquo;s me time, but I&rsquo;m usually surfing the internet or watching TV.  When I get up early, I eat (something I used to not do as well), relax online for a while, then get to work.  The relaxed pace of the morning has helped me concentrate on my tasks a lot better than before.  This also lets me leave my afternoons open to socialize or work on my own projects, which I&rsquo;ve been lamenting for quite a while.</p>

<p>However, it&rsquo;s harder for me to stay up late.  During the week I&rsquo;ve been going to bed at about midnight or so, but on weekends I rarely get to bed before 4am.  Yes, my social life is just that draining.  I&rsquo;m worried about flipping schedules again, but I think I&rsquo;ll be able to maintain it.</p>

<p>I did unintentionally crash from about 5pm til midnight this past Sunday after a particularly draining night and a brunch with friends that didn&rsquo;t leave me but five hours of sleep.   This is probably also a result of sleeping only about 6 hours a night; and my body wanting to play catch-up.  Either way, I&rsquo;m going to need to find a balance, what with work and play once again coming into conflict</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pumping Station: One: Awkward Grammar, Excellent Momentum]]></title>
    <link href="http://www.mcpantz.org/blog/2009/01/14/pumping-station-one-awkward-grammar-excellent-momentum/"/>
    <updated>2009-01-14T09:37:25-06:00</updated>
    <id>http://www.mcpantz.org/blog/2009/01/14/pumping-station-one-awkward-grammar-excellent-momentum</id>
    <content type="html"><![CDATA[<p>For the past few months I&rsquo;ve been working with a friend of mine to establish a hacker space in Chicago.  When we started, ther was ofthen just the two of us attending, and whoever else we managed to unsuspectingly wrangle into attending.</p>

<p>For those of you unfamiliar with the idea of a hacker space, let me give you my vision of the project.  Most of the people involved in this, including myself, are interested in projects that don&rsquo;t always fall along the traditional lines.  We&rsquo;re interested in science, technology, crafts, and more often than not the intersection between these areas.  We want to tinker, to create, to share ideas.  To go about this, we&rsquo;re essentially creating a mad scientist&rsquo;s clubhouse.  We&rsquo;re collecting power tools, electronics (both broken and functioning), building supplies, and anything else we think is useful.  I have an old ham radio I plan on jury-rigging up to <em>something</em> via serial port.</p>

<p>Since Eric, myself, and a few others started drumming up interest, we&rsquo;ve come along way.  We drummed up an excellent name from a friend of mine at <a href="http://verecundia.blogspot.com/" title="Verecundia">Verecundia</a>; Pumping Station: One.  We&rsquo;ve started to visit other similar groups, and look at now defunct groups (Dorkbot Chicago, I&rsquo;m looking at you), garnishing interest.  Things started to take shape, and here we are.  Our evangelistic efforts have now placed our pledged initial membership  group to over 20 people.  This is not far from the target sustainability level necessary to keep the place afloat by membership fees.  We&rsquo;ve registered as a non-profit organization in Illinois and gotten our IRS numbers in order.  We&rsquo;re investigating spaces and soon we&rsquo;ll have our financials set up, collecting membership dues, and vote on our bylaws.  And most importantly, we&rsquo;re learning &amp; creating.  In essence, we&rsquo;re not far from having a grass-roots, non-profit, self-sustaining art &amp; technology collective in the span of six months.</p>

<p>I invite anyone in the Chicago area, or anyone who may be passing through, to follow the progress of  <a href="http://pumpingstationone.org/" title="Pumping Station: One">Pumping Station: One</a>.  We&rsquo;ve got a lot planned, and we&rsquo;re always looking for new members to contribute ideas.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The New Year]]></title>
    <link href="http://www.mcpantz.org/blog/2009/01/02/the-new-year/"/>
    <updated>2009-01-02T11:55:10-06:00</updated>
    <id>http://www.mcpantz.org/blog/2009/01/02/the-new-year</id>
    <content type="html"><![CDATA[<p>So here we are in 2009, and in between the hangovers and days off people are considering what they&rsquo;d like to achieve this year.  I already accomplished my major goal (see last post), but there&rsquo;s still much I&rsquo;d like to do before I feel like I&rsquo;m living a completely sane and productive life:</p>

<ul>
    <li>I&#8217;d like to start working out again.  I don&#8217;t specifically mean getting pumped in the gym, but to get back into martial arts or somehow train myself  physically.  I&#8217;m not wasting away, but I want to make sure I still am in good shape.</li>
    <li>I want to be more of a polyglot, both spoken and computational.  I want to pick up Python and Haskell in the coming year, though using darcs, haskell&#8217;s community-standard revision control system, isn&#8217;t all that appealing to me.  Beyond that, I want a good excuse to start practicing my spoken languages again, as my German&#8217;s always been abysmal and my Spanish could use some polishing.  If I&#8217;m feeling particularly ambitious, I&#8217;ll pick up French; but that&#8217;s got a snowball&#8217;s chance right now.</li>
    <li>In addition to adding new languages, I&#8217;d like to expand my toolkit.  I worked as a web programmer for half a year a while back, and I&#8217;d like to re-vamp those skills in Perl so I can put things together myself, and actually work on the web projects I&#8217;ve had in mind for a while.</li>
    <li>While it&#8217;s certainly not a major issue now, I should be putting 15-20% of my take-home pay into savings.  I&#8217;ve got a couple recurring withdrawals set up to do that right now.</li>
</ul>


<p>All in all, my goals are relatively modest, but I feel like that&rsquo;s what makes them achievable.  Call me back in a year, and we&rsquo;ll see where I am.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[End of an Era… for the Better]]></title>
    <link href="http://www.mcpantz.org/blog/2008/11/29/end-of-an-era-for-the-better/"/>
    <updated>2008-11-29T19:15:05-06:00</updated>
    <id>http://www.mcpantz.org/blog/2008/11/29/end-of-an-era-for-the-better</id>
    <content type="html"><![CDATA[<p>When I turned 18, I was staying with my aunt and uncle in Champaign, IL; soon on my way to college.  The first thing I did that night was go down to the nearest convenience store and bought a pack of black and milds.  That didn&rsquo;t quite strike my fancy, so I switched to Marlboro Reds.  Since then, I&rsquo;ve been a pretty hardcore smoker.</p>

<p>I did manage to do a really good job of cutting back for about three months in the fall of 2006, where I was only having one cigarette a day.   Smoking was primarily a social activity for me, and my coworkers at the computer lab I was working at would often cut out about noon to re-center ourselves.  However, the stress involved with the last year of college compounded with a rather intense breakup plunged my addiction deeper than it had been before, and that&rsquo;s where it&rsquo;s been since.</p>

<p>I found that smoking is more often a psychologically fulfilling activity for me, and that was reflected in my choice of tobacco.  From Black n&#8217; Milds, I switched to Marlboro Reds, to Djarum Blacks, and then to Lucky Strikes.  Cost &amp; convenience switched me to Drum rolling tobacco in the end, which I&rsquo;ve been smoking almost exclusively for the past three years or so.  My choices were often motivated by image, and I often relied on smoking as a fashion accessory as much as anything else.</p>

<p>Every time I get sick, I&rsquo;d get nagged about how my revovery period is on the order of weeks instead of days, and that i should see a doctor.  I never considered it a major issue, because I knew what to expect.  However, recently after an illness, after I had recovered, I noticed that every time I laughed, I&rsquo;d cough.  Every time.  It was violent enough to the point where i noticed myself subconsciously trying to stop laughing.</p>

<p>For someone like me who enjoys my sense of humor in life, I found this unacceptable.   So as of Sunday night, I have not had one cigarette.  I&rsquo;ve gone cold turkey.</p>

<p>Today marks the sixth day since my last smoke, and so far I&rsquo;ve resisted the temptation many times, between going out to Neo, where at any point about 20% of the patrons are outside smoking, to simply being around people who leave the main group, and missing the change to express my usual cynicism and wit in a more relaxed, one-on-one context of sharing a mood-altering substance.</p>

<p>I&rsquo;ve also noticed that without the sweet, sweet nicotine coursing through my body, I&rsquo;ve become quite irritable and a bit more misanthropic than is usual for me.  However, this is usual and expected, and is supposed to end after a month or so after hating everyone.  Hopefully, I can get over being an insufferable dick to everyone, and thinking that everyone is the same, and reclaim a much healthier lifestyle.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[San Francisco Internet Media Company Looking for Disgruntled Employees to Fly Off the Hook on Film]]></title>
    <link href="http://www.mcpantz.org/blog/2008/10/22/san-francisco-internet-media-company-looking-for-disgruntled-employees-to-fly-off-the-hook-on-film/"/>
    <updated>2008-10-22T13:27:01-05:00</updated>
    <id>http://www.mcpantz.org/blog/2008/10/22/san-francisco-internet-media-company-looking-for-disgruntled-employees-to-fly-off-the-hook-on-film</id>
    <content type="html"><![CDATA[<p><a href="http://sfbay.craigslist.org/sfc/sof/888536966.html">Why yes, I <em>would</em> like to beat up my boss!</a></p>

<p>Aren&rsquo;t there much better ways to go about this?  Maybe like the USPS 100 Man Kumite?  Stock Broker Bumfights?  I&rsquo;m sure they could do better than this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[For All My Emacs Cohorts Out There]]></title>
    <link href="http://www.mcpantz.org/blog/2008/09/29/for-all-my-emacs-cohorts-out-there/"/>
    <updated>2008-09-29T16:27:04-05:00</updated>
    <id>http://www.mcpantz.org/blog/2008/09/29/for-all-my-emacs-cohorts-out-there</id>
    <content type="html"><![CDATA[<p>How do you like having an extremely extensible, mature, and stable text editor.  I sure do.  One thing that always bugged me when writing code is going through and finding all sorts of annoying trailing whitespace.  For most major modes, tabs are converted to spaces for consistency, but trailing whitespaces are neglected.  I was considering writing an elisp function to go ahead and take care this until I found <a href="http://www.splode.com/~friedman/software/emacs-lisp/src/whitespace.el">This little gem</a>.  I suggest that anyone that has to deal with syntax where trailing whitespace is ignored to have a crack at this.</p>

<p>For that matter, the rest of the interface enhancements on <a href="http://www.splode.com/~friedman/software/emacs-lisp/">the main page</a> look like they&rsquo;d be excellent additions to one&rsquo;s <tt>~/elisp/</tt> folder even today; as for the most part, the code here dates back to the early 90&rsquo;s.  Emacs isn&rsquo;t exactly a popular mail client anymore&hellip;</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | M.C. Pantz]]></title>
  <link href="http://mcpantz.org/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://mcpantz.org/"/>
  <updated>2014-11-18T14:54:55-06:00</updated>
  <id>http://mcpantz.org/</id>
  <author>
    <name><![CDATA[Paul C. Mantz]]></name>
    <email><![CDATA[pcmantz@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Iterators Make You Lazy]]></title>
    <link href="http://mcpantz.org/blog/2012/06/24/iterators-make-you-lazy/"/>
    <updated>2012-06-24T15:25:00-05:00</updated>
    <id>http://mcpantz.org/blog/2012/06/24/iterators-make-you-lazy</id>
    <content type="html"><![CDATA[<p>One of the most productive &ldquo;A-Ha!&rdquo; moments I&rsquo;ve had as a developer came when I
learned how to use iterators, and the dramatic effect that it has on my coding
style. When we introduced the concept to one layer of code to handle a
specific problem, the pattern of development proved infectious for dealing
with similar workflows and managed to make our code much more succinct and
understandable to newcomers.</p>

<p>At a past place of $WORK, I worked on a project where we wanted to add a
REST-ful API to our data, but we had to deal with blocking SQL queries whose
completion took longer than any sane HTTP timeout should be. The result was
that we needed to stream the formatted output of the query.</p>

<p>It turns out that most REST-type plugins for Catalyst don&rsquo;t handle streaming
output, so we couldn&rsquo;t use something off the shelf.  However, we did discover
a module called
<a href="https://metacpan.org/module/Iterator::Simple">Iterator::Simple</a>.  This
allowed us to construct on-the-fly formatters that we could then stream to the
users. Now all of our code stopped looking like ugly while loops and temporary
variables, and turned into this:</p>

<pre><code class="perl">use Iterator::Simple qw(iflatten imap);

sub format_nodes {
    my ($nodes_rs) = @_;

    iflatten [
       '&lt;nodes&gt;',
        imap { format_node($_) } $nodes_rs, 
        '&lt;/nodes&gt;',
    ];
}
</code></pre>

<p>The fun didn&rsquo;t stop there.  It started becoming clear that chaining and
passing around iterators was a great way to quickly set up the construction of
data sets, then pass those constructions along to consumers. A small library
of macros had managed to invade our code and make it very, very lazy.</p>

<p>It turned out that many of our data preparation routines were expressible as
computations that didn&rsquo;t need to live in memory. Anywhere we were running a
loop and processing data, we could refactor that region with <code>imap</code> and a code
block, and have the code execute on a per-needed basis.</p>

<p>The only one gripe that I have with this module is that its file handle
emulation is incomplete.  The module emulates the <code>getline</code> syntax; e.g.; the
<code>&amp;&lt;&gt;</code> operator, but not the method. Right now,
<a href="https://metacpan.org/source/MIYAGAWA/Catalyst-Engine-PSGI-0.13/lib/Catalyst/Engine/PSGI.pm">Catalyst::Engine::PSGI</a>
assumes that the <code>getline</code> method is implemented on the resource to be
streamed.  This is true of file handles, but not of
<code>Iterator::Simple::Iterator</code> objects. If the latter provided that interface,
then this module would increase dramatically in utility. I have filed
<a href="https://rt.cpan.org/Public/Bug/Display.html?id=72629">a bug</a> and submitted a
patch, so we&rsquo;ll see how it plays out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Large Files in Emacs]]></title>
    <link href="http://mcpantz.org/blog/2012/02/05/large-files-in-emacs/"/>
    <updated>2012-02-05T15:43:00-06:00</updated>
    <id>http://mcpantz.org/blog/2012/02/05/large-files-in-emacs</id>
    <content type="html"><![CDATA[<p>I have started work on a new project where a lot of the source files are huge;
files are commonly over 1,000 lines in length.  While this is a massive
<a href="http://www.codinghorror.com/blog/2006/05/code-smells.html">code smell</a> that
needs to be dealt with, it doesn&rsquo;t preclude the necessity of working with the
file in the first place.</p>

<p>It appears that emacs has no problem navigating the files, but editing large
files is a royal pain in the rear end.  It appears that the only reasonable
solution to shut off <code>'font-lock-mode</code>.</p>

<p>In addition, I have been using
<a href="http://www.emacswiki.org/emacs/CPerlModeOutlineMode">outline-minor-mode</a> to
narrow the focus of my attention.  Having a top-down view of the file which I
am working with really helps.</p>

<p>I wonder how much hacking would be involved to make comments associated with
their own header; or in the case of indented comments, with the level above
them; as sort of a &ldquo;floating&rdquo; header level rather than a specific one.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyland]]></title>
    <link href="http://mcpantz.org/blog/2012/01/14/rubyland/"/>
    <updated>2012-01-14T18:47:00-06:00</updated>
    <id>http://mcpantz.org/blog/2012/01/14/rubyland</id>
    <content type="html"><![CDATA[<p>Today, I gave ruby&rsquo;s ecosystem of web tools a try.  Wordpress isn&rsquo;t a good
blogging solution for me, but i would like to have a public-facing,
non-site-specific blog to pass about.  I am giving
<a href="http://octopress.org/">Octopress</a> a try for managing my my non-machine
readable output.</p>

<p>I am enjoying the prospect of using a completely flatfile blog; as that means
I have one less moving part to worry about.</p>

<p>Hopefully I will have the motivation to post about some useful information
here.  It turns out that the things that infuriate me tend to be very helpful
to others, so keep your eyes peeled.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CPAN Shenanigans]]></title>
    <link href="http://mcpantz.org/blog/2009/05/20/cpan-shenanigans/"/>
    <updated>2009-05-20T17:15:00-05:00</updated>
    <id>http://mcpantz.org/blog/2009/05/20/cpan-shenanigans</id>
    <content type="html"><![CDATA[<p>I just requested a CPAN account last night.  Hopefully I&rsquo;ll have the gumption to throw up all those that I feel are missing that I&rsquo;ve been missing that I would be very happy to add.  one of them is glob-match support in perl that&rsquo;s file-system agnostic.</p>

<p>Of course, My first module&rsquo;s going to be a result of some <a href="http://scavhunt.uchicago.edu/" title="The University of Chicago Scavenger Hunt">Scav Hunt</a> tomfoolery, which I&rsquo;ll be sure to post about later, once it&rsquo;s up.  Let&rsquo;s just say that Jewish numerology will get a lot easier now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pumping Station: One Progress]]></title>
    <link href="http://mcpantz.org/blog/2009/05/05/pumping-station-one-progress/"/>
    <updated>2009-05-05T18:07:37-05:00</updated>
    <id>http://mcpantz.org/blog/2009/05/05/pumping-station-one-progress</id>
    <content type="html"><![CDATA[<p>What did i do this weekend?  I helped <a href="http://pumpingstationone.org/blog/2009/05/buildout-weekend---part-2-the-loft.html" title="Buildout Weekend - Part 2: The Loft">build a loft</a>, that&rsquo;s what.  And it was awesome.</p>

<p>Next up on the agenda: I feel sometimes that I&rsquo;m the leader of the software interests at PS:1 somewhat, so I&rsquo;m going to make an executive decision on this.  I have many, many different projects going on aside from hacking, so I can&rsquo;t show up at the space every day like some of the more dedicated members have been doing.  Instead, I&rsquo;m just going to be regular about this.</p>

<p>I&rsquo;m going to try and make it to the space Wednesday night and Sunday afternoon.  Anyone interested in programming languages, esoteric languages, functional programming, and software engineering should show up and talk/yell at me.  If enough people show up, we&rsquo;ll call it a meetup group.  If they don&rsquo;t, I&rsquo;ll read &amp; study by myself, and get anti-social and even more stabbity.  Your call.</p>
]]></content>
  </entry>
  
</feed>
